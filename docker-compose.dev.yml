version: '3.8'

services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${DB_USER} -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    networks:
      - quicknotes
    ports:
      - "5432:5432"  
  migrate:
    image: migrate/migrate
    networks:
      - quicknotes
    volumes:
      - ./db/migrations:/migrations
    command: ["-path", "/migrations", "-database", "postgres://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_USER}?sslmode=disable", "up"]
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
  server:
    build:
      context: ./
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
    networks:
      - quicknotes
    ports:
      - "5000:5000"
    environment:
      QNS_DB_CONN_URL: "postgres://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_USER}?sslmode=disable"
      QNS_SERVER_PORT: "5000"
      QNS_MAIL_HOST: ${QNS_MAIL_HOST}
      QNS_MAIL_PORT: ${QNS_MAIL_PORT}
      QNS_MAIL_USERNAME: ${QNS_MAIL_USERNAME}
      QNS_MAIL_PASSWORD: ${QNS_MAIL_PASSWORD}
      QNS_MAIL_FROM: ${QNS_MAIL_FROM}
      QNS_CSRF_KEY: ${QNS_CSRF_KEY}
  caddy:
    build:
      context: ./caddy
      dockerfile: Dockerfile
    networks:
      - quicknotes
    ports:
      - "443:443"
      - "443:443/udp"
    environment:
      DUCK_DNS_TOKEN: ${DUCK_DNS_TOKEN}
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config

networks:
  quicknotes:

volumes:
  caddy_data:
  caddy_config:  